{"version":3,"sources":["directory.js"],"names":["Person","props","person","name","title","img","bio","People","people","map","id","enter","enterActive","exit","exitActive","Filters","titles","window","LMDirectory","updateName","evt","updateState","target","value","updateTitle","updateIntern","checked","resetAll","currentName","currentTitle","key","display","isIntern","Directory","state","updateFormState","bind","val","setState","updatePeopleList","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","console","log","resetFormState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\n  \"use strict\";\n\n  function Person(props) {\n    return ( \n\n      <div className=\"person\">\n        <h3>\n          {props.person.name}, {props.person.title}\n        </h3>\n\n        <p>\n          <img\n            className=\"size-medium alignright\"\n            src={props.person.img}\n            alt={props.person.name}\n            width=\"300\"\n            height=\"300\"\n            sizes=\"(max-width: 300px) 100vw, 300px\"\n          />\n\n          {props.person.bio}\n        </p>\n      </div>\n    );\n  }\n\n  function People(props) {\n    return (\n      <div className=\"results\">\n      <ReactTransitionGroup.TransitionGroup>\n        {props.people.map(function(person) {\n          return (\n            <ReactTransitionGroup.CSSTransition key={person.id}\n            classNames={{\n              enter: \"animated\",\n              enterActive: \"zoomIn\",\n              exit: \"animated\",\n              exitActive: \"zoomOut\"\n            }} timeout={1000}>\n          <Person person={person} />\n          </ReactTransitionGroup.CSSTransition>\n        )\n        })}\n            </ReactTransitionGroup.TransitionGroup>\n      </div>\n    );\n  }\n\n  function Filters(props) {\n    var titles = window.LMDirectory.titles;\n    function updateName(evt){\n      props.updateState(\"currentName\", evt.target.value)\n\n    }\n    function updateTitle(evt){\n      props.updateState(\"currentTitle\", evt.target.value)\n    }\n    function updateIntern(evt){\n      props.updateState(\"isIntern\", evt.target.checked)\n    }\n    function resetAll(evt){\n      props.updateState(\"isIntern\", false);\n      props.updateState(\"currentTitle\", \"\")\n      props.updateState(\"currentName\", \"\")\n    }\n    return (\n      <form action=\"\" id=\"directory-filters\">\n        <div className =\"group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"person-name\">Name:</label>\n                  <input type=\"text\" name=\"person_name\" \n                  placeholder=\"Name of employee\" \n                  id=\"person-name\"\n                  value={props.currentName}\n                  onChange={updateName}/>\n\t\t\t\t\t\t   </div>\n\t\t\t\t\t\t\t\t<div className=\"group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"person-title\">Job Title:</label>\n\t\t\t\t\t\t\t\t\t<select name=\"person_title\" id=\"person-title\" value={props.currentTitle} onChange={updateTitle}>\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">- Select -</option>\n\t\t\t\t\t\t\t\t\t\t{titles.map(function(title){\n                      return(<option value={title.key} key={title.key}>{title.display}</option>)\n                    })}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"group\">\n\t\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" checked={props.isIntern} onChange={updateIntern} name=\"person_intern\"/> Intern</label>\n\t\t\t\t\t\t\t\t</div>\n                <div className=\"group\"> <button onClick={resetAll}>Reset</button></div>\n                \n      </form>\n    );\n  }\n\n  class Directory extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        people: window.LMDirectory.people,\n        currentName: \"\",\n        currentTitle: \"\",\n        isIntern: false\n      }\n      this.updateFormState = this.updateFormState.bind(this)\n    }\n\n      updateFormState(name, val) {\n\n        this.setState ({\n          [name]: val\n        }, this.updatePeopleList\n      );\n\n      };\n      resetFormState(){\n        this.setState({\n          people: window.LMDirectory.people,\n          currentName: \"\",\n          currentTitle: \"\",\n          isIntern: false\n        })\n      }\n\n      // search the whole employee list with current filters\n  updatePeopleList() {\n    var filteredPeople = window.LMDirectory.people.filter(\n      function(person) {\n        return (\n          person.intern === this.state.isIntern &&\n          (this.state.currentName === \"\" ||\n            person.name.toLowerCase().indexOf(this.state.currentName.toLowerCase()) !==\n              -1) &&\n          (this.state.currentTitle === \"\" || person.title_cat === this.state.currentTitle)\n        );\n      }.bind(this)\n    );\n\n    this.setState({\n      people: filteredPeople\n    });\n  }\n \n   \n    render() {\n      console.log(this.state.currentName)\nreturn (\n        <div className=\"company-directory\">\n          <h2>Company Directory</h2>\n          <p>Learn more about each person at Leaf & Mortar in this company directory.</p>\n\n          <Filters \n          currentName={this.state.currentName}\n          currentTitle = {this.state.currentTitle} \n          isIntern={this.state.isIntern}\n          updateState ={this.updateFormState} \n          resetFormState ={this.resetFormState}\n          />\n\n          <People people={this.state.people} />\n          \n        </div>\n      );\n    }\n  }\n\n  ReactDOM.render(<Directory />, document.getElementById(\"directory-root\"));\n})();\n"]}